1. Read Your First Cup: An Introduction to the Java EE Platform — Focus on Chapter 2, “Understanding Java Platform, Enterprise Edition”

	a. Explain the tiers discussed in the article. On which does J2EE focus? On which to the Oracle database focus?
	- The client tier consists of application clients that access a Java EE server and that are usually located on a different machine from the server. The clients make requests to the server. 
	The server processes the requests and returns a response back to the client. Many different types of applications can be Java EE clients, and they are not always, or even often Java applications. 
	Clients can be a web browser, a standalone application, or other servers, and they run on a different machine from the Java EE server.

	- The web tier consists of components that handle the interaction between clients and the business tier. Its primary tasks are the following:
		- Dynamically generate content in various formats for the client
		- Collect input from users of the client interface and return appropriate results from the components in the business tier
		- Control the flow of screens or pages on the client
		- Maintain the state of data for a user's session
		- Perform some basic logic and hold some data temporarily in managed beans

	- The business tier consists of components that provide the business logic for an application. Business logic is code that provides functionality to a particular business domain, like the financial 
	industry, or an e-commerce site. In a properly designed enterprise application, the core functionality exists in the business tier components. The following Java EE technologies are among those that 
	are used in the business tier in Java EE applications:
		- Enterprise JavaBeans (enterprise bean) components
		- JAX-RS RESTful web services
		- Java Persistence API entities

	- The enterprise information systems (EIS) tier consists of database servers, enterprise resource planning systems, and other legacy data sources, like mainframes. These resources typically are located 
	on a separate machine from the Java EE server, and are accessed by components on the business tier. The following Java EE technologies are used to access the EIS tier in Java EE applications:
		- The Java Database Connectivity API (JDBC)
		- The Java Persistence API
		- The Java EE Connector Architecture
		- The Java Transaction API (JTA)

	b. Explain the nature of a J2EE container. What sort of containers are there?
		- A Java EE server is a server application that implements the Java EE platform APIs and provides standard Java EE services. Java EE servers are sometimes called application servers, because they allow you to serve application data to clients, much as web servers serve web pages to web browsers.
		Java EE servers host several application component types that correspond to the tiers in a multi-tiered application. The Java EE server provides services to these components in the form of a container.Java EE containers are the interface between the component and the lower-level functionality 
		provided by the platform to support that component. The functionality of the container is defined by the platform and is different for each component type. Nonetheless, the server allows the different component types to work together to provide functionality in an enterprise application.

		- The web container is the interface between web components and the web server. A web component can be a servlet or a JavaServer Faces Facelets page. The container manages the component's lifecycle, dispatches requests to application components, and provides interfaces to context data, such as information about the current request.

		- The EJB container is the interface between enterprise beans, which provide the business logic in a Java EE application, and the Java EE server. The EJB container runs on the Java EE server and manages the execution of an application's enterprise beans.

		- The application client container is the interface between Java EE application clients (special Java SE applications that use Java EE server components) and the Java EE server. The application client container runs on the client machine and is the gateway between the client application and the Java EE server components that the client uses.


2. Read The Java EE Tutorial — This tutorial provides extensive material on J2EE; focus on the sections listed here.

	a. Sections 1.7–1.8, “Java EE 7 APIs” — Explain the purpose of these technologies (only): JPA, JTA, JAX-RS*, JDBC, JAXB.
		- The Java Persistence API (JPA) is a Java standards–based solution for persistence. Persistence uses an object/relational mapping approach to bridge the gap between an object-oriented model and a relational database. The Java Persistence API can also be used in Java SE applications outside of the Java EE environment. 
		Java Persistence consists of the following areas:
			- The Java Persistence API
			- The query language
			- Object/relational mapping metadata
			- The Java EE 7 platform requires Java Persistence API 2.1.




	b. Section 5, “Packaging Applications” — Compare and contrast JARs, WARs & EARs.

3. Review these tutorials, on which the lab is based: Developing a Java EE Application & Creating and Running Your First RESTful Web Service.

	a. Identify the IDE we’ll use for J2EE development.

	b. Identify the roles of the following technologies in the J2EE application: J2SE’s JDK; GlassFish.

	c. Explain the nature of a RESTful webservice.*